// Slack Client (discord.gg/paGUcq2UTb)

package cc.slack.features.modules.impl.exploit;

import cc.slack.events.impl.network.PacketEvent;
import cc.slack.events.impl.player.*;
import cc.slack.features.modules.api.Category;
import cc.slack.features.modules.api.Module;
import cc.slack.features.modules.api.ModuleInfo;
import cc.slack.features.modules.api.settings.impl.ModeValue;
import cc.slack.features.modules.impl.exploit.norotate.impl.EditNoRotate;
import cc.slack.features.modules.impl.exploit.norotate.INorotate;
import cc.slack.features.modules.impl.exploit.norotate.impl.PacketNoRotate;
import io.github.nevalackin.radbus.Listen;
import net.minecraft.network.Packet;

@ModuleInfo(
        name = "NoRotate",
        category = Category.EXPLOIT
)
public class NoRotate extends Module {

    private final ModeValue<INorotate> mode = new ModeValue<>("Mode",new INorotate[]{
        new PacketNoRotate(),
        new EditNoRotate()
    });
    public NoRotate() {
        super();
        addSettings(mode);
    }


    @Override
    public void onEnable() {
        mode.getValue().onEnable();
    }

    @Override
    public void onDisable() {
        mode.getValue().onDisable();
    }

    @Listen
    public void onMotion(MotionEvent event) {

    }

    @Listen
    public void onUpdate(UpdateEvent event) {
        mode.getValue().onUpdate(event);
    }

    @Listen
    public void onPacket(PacketEvent event) {
        final Packet packet = event.getPacket();
        mode.getValue().onPacket(event);
    }

    @Override
    public String getMode() {
        return mode.getValue().toString();
    }

}
