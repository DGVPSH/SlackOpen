package cc.slack.features.modules.impl.exploit;

import cc.slack.events.impl.player.UpdateEvent;
import cc.slack.features.modules.api.Category;
import cc.slack.features.modules.api.Module;
import cc.slack.features.modules.api.ModuleInfo;
import cc.slack.features.modules.api.settings.impl.BooleanValue;
import cc.slack.features.modules.api.settings.impl.ModeValue;
import cc.slack.features.modules.api.settings.impl.NumberValue;
import cc.slack.utils.network.PingSpoofUtil;
import io.github.nevalackin.radbus.Listen;

@ModuleInfo(
        name = "PingSpoof",
        category = Category.EXPLOIT
)
public class PingSpoof extends Module {

    private final BooleanValue outboundValue = new BooleanValue("Outbound", true);
    private final BooleanValue inboundValue = new BooleanValue("Inbound", true);
    private final NumberValue<Integer> delayValue = new NumberValue<>("Delay", 200, 1, 1000, 25);

    public PingSpoof() {
        addSettings(outboundValue, inboundValue, delayValue);
    }


    @Override
    public void onEnable() {
        PingSpoofUtil.enableOutbound(outboundValue.getValue(), delayValue.getValue());
        PingSpoofUtil.enableInbound(inboundValue.getValue(), delayValue.getValue());
    }

    @Override
    public void onDisable() {
        PingSpoofUtil.disable();
    }


    @Override
    public String getMode() {
        return delayValue.getValue().toString();

    }
}
