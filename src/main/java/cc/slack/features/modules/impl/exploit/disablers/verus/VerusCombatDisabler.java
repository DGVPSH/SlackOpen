package cc.slack.features.modules.impl.exploit.disablers.verus;

import cc.slack.events.impl.network.PacketEvent;
import cc.slack.events.impl.player.AttackEvent;
import cc.slack.events.impl.player.WorldEvent;
import cc.slack.features.modules.impl.exploit.Disabler;
import cc.slack.features.modules.impl.exploit.disablers.IDisabler;
import cc.slack.start.Slack;
import cc.slack.utils.network.PacketUtil;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.server.S32PacketConfirmTransaction;


public class VerusCombatDisabler implements IDisabler {

    private boolean transaction = false;
    private boolean isOnCombat = false;


    @Override
    public void onAttack(AttackEvent event) {
        isOnCombat = true;
    }

    @Override
    public void onWorld(WorldEvent event) {
        isOnCombat = false;
    }

    @Override
    public void onPacket(PacketEvent event) {
        EntityPlayer player = mc.thePlayer;
        if (player == null) return;

        if (player.ticksExisted <= 20) {
            isOnCombat = false;
            return;
        }

        if (Slack.getInstance().getModuleManager().getInstance(Disabler.class).verusonlyCombat.getValue() && !isOnCombat) {
            return;
        }

        if (event.getPacket() instanceof S32PacketConfirmTransaction) {
            event.cancel();
            PacketUtil.send(new C0FPacketConfirmTransaction(transaction ? 1 : -1, (short) (transaction ? -1 : 1), transaction));
            transaction = !transaction;
        }
    }

    @Override
    public String toString() {
        return "Verus Combat";
    }

}
